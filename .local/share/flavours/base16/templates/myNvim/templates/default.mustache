local M = {}

local function rgbToHex(r, g, b)
    -- Ensure values are within valid range (0-255)
    r = math.floor(math.min(255, math.max(0, r)))
    g = math.floor(math.min(255, math.max(0, g)))
    b = math.floor(math.min(255, math.max(0, b)))

    -- Convert to hexadecimal string format
    return string.format('#%02X%02X%02X', r, g, b)
end


M.base_30 = {
  white = "#{{base07-hex}}",
  darker_black = rgbToHex({{base00-rgb-r}}*0.92,{{base00-rgb-g}}*0.92,{{base00-rgb-b}}*0.92), -- 6% darker than black
  black = "#{{base00-hex}}", --  nvim bg
  black2 = rgbToHex({{base00-rgb-r}}*1.06,{{base00-rgb-g}}*1.06,{{base00-rgb-b}}*1.06),-- 6% lighter than black
  one_bg = rgbToHex({{base00-rgb-r}}*1.10,{{base00-rgb-g}}*1.10,{{base00-rgb-b}}*1.10), -- 10% lighter than black
  one_bg2 = rgbToHex({{base00-rgb-r}}*1.10*1.06,{{base00-rgb-g}}*1.10*1.06,{{base00-rgb-b}}*1.10*1.06), -- 6% lighter than one_bg2
  one_bg3 = rgbToHex({{base00-rgb-r}}*1.10*1.06*1.06,{{base00-rgb-g}}*1.10*1.06*1.06,{{base00-rgb-b}}*1.10*1.06*1.06), -- 6% lighter than one_bg3
  grey = rgbToHex({{base00-rgb-r}}*1.40,{{base00-rgb-g}}*1.40,{{base00-rgb-b}}*1.40), -- 40% lighter than black
  grey_fg = rgbToHex({{base00-rgb-r}}*1.40*1.10,{{base00-rgb-g}}*1.40*1.10,{{base00-rgb-b}}*1.40*1.10), -- 10% lighter than grey
  grey_fg2 = rgbToHex({{base00-rgb-r}}*1.40*1.05,{{base00-rgb-g}}*1.40*1.05,{{base00-rgb-b}}*1.40*1.05), -- 5% lighter than grey
  light_grey = "#605f6f",
  red = "#{{base08-hex}}",
  baby_pink = "#ffa5c3",
  pink = "#F5C2E7",
  line = rgbToHex({{base00-rgb-r}}*1.15,{{base00-rgb-g}}*1.15,{{base00-rgb-b}}*1.15), -- for lines like vertsplit 15% ligher than black
  green = "#{{base0B-hex}}",
  vibrant_green = "#b6f4be",
  nord_blue = "#8bc2f0",
  blue = "#{{base0D-hex}}",
  yellow = "#{{base0A-hex}}",
  sun = "#ffe9b6",
  purple = "#d0a9e5",
  dark_purple = "#c7a0dc",
  teal = "#B5E8E0",
  orange = "#{{base09-hex}}",
  cyan = "#{{base0C-hex}}",
  statusline_bg = rgbToHex({{base00-rgb-r}}*1.06,{{base00-rgb-g}}*1.06,{{base00-rgb-b}}*1.06),
  lightbg = rgbToHex({{base00-rgb-r}}*1.40*1.10,{{base00-rgb-g}}*1.40*1.10,{{base00-rgb-b}}*1.40*1.10),
  pmenu_bg = "#{{base0B-hex}}",
  folder_bg = "#{{base0D-hex}}",
  lavender = "#c7d1ff",
}

M.base_16 = {
  base00 = "#{{base00-hex}}",                   
  base01 = "#{{base01-hex}}",                   
  base02 = "#{{base02-hex}}",                   
  base03 = "#{{base03-hex}}",                   
  base04 = "#{{base04-hex}}",                   
  base05 = "#{{base05-hex}}",                   
  base06 = "#{{base06-hex}}",                   
  base07 = "#{{base07-hex}}",                   
  base08 = "#{{base08-hex}}",                   
  base09 = "#{{base09-hex}}",                   
  base0A = "#{{base0A-hex}}",                   
  base0B = "#{{base0B-hex}}",                   
  base0C = "#{{base0C-hex}}",                   
  base0D = "#{{base0D-hex}}",                   
  base0E = "#{{base0E-hex}}",                   
  base0F = "#{{base0F-hex}}"
}

M.polish_hl = {
  defaults = {
    Comment = {
      fg = rgbToHex({{base00-rgb-r}}*1.40*1.80,{{base00-rgb-g}}*1.40*1.80,{{base00-rgb-b}}*1.40*1.80),
    },
  },

  treesitter = {
    ["@variable"] = { fg = M.base_30.lavender },
    ["@property"] = { fg = M.base_30.teal },
    ["@variable.builtin"] = { fg = M.base_30.red },
  },
}

M.type = "dark"

M = require("base46").override_theme(M, "flavours")

return M
