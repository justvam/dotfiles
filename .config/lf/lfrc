set preview true
set hidden false
set ignorecase true
set icons true
set ifs "\n"

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

cmd open ${{
  case $(file --mime-type "$f" -bL) in
    text/*|application/json) $EDITOR "$f";;
    video/*|image/*/application/pdf) xdg-open "$f" & disown;;
    *) xdg-open "$f" ;;
    esac
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in $fx
  do
    chmod $ans $file
  done
  
  lf -remote 'send reload'
}}

cmd mkdir ${{
  echo "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  %echo "File Name: "
  read ans
  $EDITOR $ans
}}

cmd trash ${{
  gio trash $fx
  #for file in $fx
  #  do
  #    gio trash $file
  #  done
}}

cmd set_wallpaper ${{
  hyprctl hyprpaper preload $f
  hyprctl hyprpaper wallpaper eDP-1,$f
  flavours generate dark $f
  flavours apply generated
  kitten themes --reload-in=all  Current-Theme
  echo "preload = $f" > ~/.config/hypr/hyprpaper.conf
  echo "wallpaper = eDP-1,$f" >> ~/.config/hypr/hyprpaper.conf
}}

cmd mount_drive ${{
    clear

    echo "Available drives:"
    
    lsblk -o LABEL,NAME,SIZE,TYPE,MOUNTPOINT

    read -p "Enter the drive to mount (e.g., /dev/sdb1): " drive

    read -p "Enter the mount point (e.g., /mnt/usb): " mount_point
    
    if [ ! -b "$drive" ]; then
        echo "Error: Drive '$drive' does not exist."
    fi
    
    if [ -z "$mount_point" ]; then
        mount_point="/run/media/$(whoami)/$(basename $(lsblk -no LABEL "$drive"))"
    fi

    if [ ! -d "$mount_point" ]; then
        sudo mkdir -p "$mount_point"
    fi

    sudo mount "$drive" "$mount_point"
    if [ $? -ne 0 ]; then
        echo "Error: Failed to mount '$drive' to '$mount_point'."
        return 1
    fi

    echo "Drive successfully mounted to '$mount_point'."


}}

cmd umount_drive ${{
    clear
    echo "Mounted drives:"
    
    lsblk -o LABEL,NAME,SIZE,TYPE,MOUNTPOINT | grep -e "/"

    read -p "Enter the drive to unmount (e.g., /dev/sdb1): " drive
    
    mount_point="$(findmnt -n -o TARGET --source /dev/sdb1)"

    sudo umount "$drive"

    sudo rmdir $mount_point

    echo "Drive '$drive' successfully unmounted."

}}

# Remove some defaults
map m
map d

# wallpaper
map mw set_wallpaper

# Creating files and directories
map md mkdir
map mf mkfile

# Trash files
map dd trash

# Cut
map x cut

# chmod
map mh chmod

# Directories
map gd cd ~/Downloads/
map gt cd ~/Downloads/Torrents/
map gv cd ~/Videos/
map gD cd ~/Documents/
map gr cd ~/Random/
map gG cd ~/Games/
map gp cd ~/Projects/
map gP cd ~/Pictures/
map gm cd /run/media/

# mounting drives
map dm mount_drive
map du umount_drive

